{"ast":null,"code":"import { environment } from \"../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  signup(user) {\n    return this.http.post(environment.BACKEND_URL + \"/users/signup\", user);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["environment","AuthService","constructor","http","signup","user","post","BACKEND_URL","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/yohannes/playground/splitExpense/src/app/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {IUser} from \"./interfaces/IUser.interface\";\nimport {environment} from \"../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  signup(user :IUser){\n    return this.http.post(environment.BACKEND_URL+\"/users/signup\",user)\n\n  }\n}\n"],"mappings":"AAGA,SAAQA,WAAW,QAAO,6BAA6B;;;AAEvD,MAGaC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAMA,CAACC,IAAW;IAChB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAACN,WAAW,CAACO,WAAW,GAAC,eAAe,EAACF,IAAI,CAAC;EAErE;;AAPWJ,WAAW,C;mBAAXA,WAAW,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXV,WAAW,C;SAAXA,WAAW;EAAAW,OAAA,EAAXX,WAAW,CAAAY,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
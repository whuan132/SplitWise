{"ast":null,"code":"import { inject } from '@angular/core';\nimport { ToastService } from \"./toast.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"\", \"signup\"];\n};\nclass SigninComponent {\n  constructor(auth) {\n    this.auth = auth;\n    this.toast = inject(ToastService);\n    this.signinForm = inject(FormBuilder).group({\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.min(8), Validators.required]]\n    });\n  }\n  onSignIn() {\n    if (this.signinForm.invalid) {\n      return;\n    }\n    const {\n      email,\n      password\n    } = this.signinForm.value;\n    if (email && password) {\n      this.auth.signin({\n        email,\n        password\n      }).subscribe(res => {\n        if (res && res.success) {\n          try {\n            const token = res.data;\n            const user = jwtDecode(token);\n            console.log(user);\n            this.stateService.user.set({\n              ...user,\n              token\n            });\n            this.router.navigate(['', 'group']);\n          } catch (error) {\n            console.error('Error decoding JWT:', error);\n          }\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n}\nSigninComponent.ɵfac = function SigninComponent_Factory(t) {\n  return new (t || SigninComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nSigninComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SigninComponent,\n  selectors: [[\"app-signin\"]],\n  decls: 34,\n  vars: 4,\n  consts: [[1, \"bg-gray-50\", \"dark:bg-gray-900\"], [1, \"flex\", \"flex-col\", \"items-center\", \"justify-center\", \"px-6\", \"py-8\", \"mx-auto\", \"md:h-screen\", \"lg:py-0\"], [\"href\", \"#\", 1, \"flex\", \"items-center\", \"mb-6\", \"text-2xl\", \"font-semibold\", \"text-gray-900\", \"dark:text-white\"], [\"src\", \"../assets/images/logo.png\", \"alt\", \"logo\", 1, \"h-8\", \"mr-2\"], [1, \"w-full\", \"bg-white\", \"rounded-lg\", \"shadow\", \"dark:border\", \"md:mt-0\", \"sm:max-w-md\", \"xl:p-0\", \"dark:bg-gray-800\", \"dark:border-gray-700\"], [1, \"p-6\", \"space-y-4\", \"md:space-y-6\", \"sm:p-8\"], [1, \"text-xl\", \"font-bold\", \"leading-tight\", \"tracking-tight\", \"text-gray-900\", \"md:text-2xl\", \"dark:text-white\"], [1, \"space-y-4\", \"md:space-y-6\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"name@company.com\", \"required\", \"true\", \"formControlName\", \"email\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"sm:text-sm\", \"rounded-lg\", \"focus:ring-purple-600\", \"focus:border-purple-600\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-purple-500\", \"dark:focus:border-purple-500\"], [\"for\", \"password\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"placeholder\", \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", \"required\", \"true\", \"formControlName\", \"password\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"sm:text-sm\", \"rounded-lg\", \"focus:ring-purple-600\", \"focus:border-purple-600\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\"], [1, \"flex\", \"items-center\", \"justify-between\"], [1, \"flex\", \"items-start\"], [1, \"flex\", \"items-center\", \"h-5\"], [\"id\", \"remember\", \"aria-describedby\", \"remember\", \"type\", \"checkbox\", \"required\", \"\", 1, \"w-4\", \"h-4\", \"border\", \"border-gray-300\", \"rounded\", \"bg-gray-50\", \"focus:ring-3\", \"focus:ring-purple-800\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:focus:ring-purple-600\", \"dark:ring-offset-gray-800\"], [1, \"ml-3\", \"text-sm\"], [\"for\", \"remember\", 1, \"text-gray-500\", \"dark:text-gray-300\"], [\"href\", \"#\", 1, \"text-sm\", \"font-medium\", \"text-primary-600\", \"hover:underline\", \"dark:text-primary-500\"], [\"type\", \"submit\", 1, \"w-full\", \"focus:outline-none\", \"text-white\", \"bg-purple-700\", \"hover:bg-purple-800\", \"focus:ring-4\", \"focus:ring-purple-300\", \"font-medium\", \"rounded-lg\", \"text-sm\", \"px-5\", \"py-2.5\", \"mb-2\", \"dark:bg-purple-600\", \"dark:hover:bg-purple-700\", \"dark:focus:ring-purple-900\", \"disabled:bg-purple-400\", \"disabled:cursor-not-allowed\", 3, \"disabled\"], [1, \"text-sm\", \"font-light\", \"text-gray-500\", \"dark:text-gray-400\"], [1, \"font-medium\", \"text-primary-600\", \"hover:underline\", \"dark:text-primary-500\", 3, \"routerLink\"]],\n  template: function SigninComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"section\", 0)(2, \"div\", 1)(3, \"a\", 2);\n      i0.ɵɵelement(4, \"img\", 3);\n      i0.ɵɵtext(5, \" CoinSplit \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"h1\", 6);\n      i0.ɵɵtext(9, \" Sign in to your account \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSignIn();\n      });\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Your email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"div\", 13)(21, \"div\", 14);\n      i0.ɵɵelement(22, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 16)(24, \"label\", 17);\n      i0.ɵɵtext(25, \"Remember me\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"a\", 18);\n      i0.ɵɵtext(27, \"Forgot password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"button\", 19);\n      i0.ɵɵtext(29, \"Sign in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"p\", 20);\n      i0.ɵɵtext(31, \" Don\\u2019t have an account yet? \");\n      i0.ɵɵelementStart(32, \"a\", 21);\n      i0.ɵɵtext(33, \"Sign up\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.signinForm);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"disabled\", ctx.signinForm.status === \"INVALID\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  encapsulation: 2\n});\nexport { SigninComponent };","map":{"version":3,"names":["inject","ToastService","FormBuilder","Validators","SigninComponent","constructor","auth","toast","signinForm","group","email","required","password","min","onSignIn","invalid","value","signin","subscribe","res","success","token","data","user","jwtDecode","console","log","stateService","set","router","navigate","error","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","SigninComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SigninComponent_Template_form_ngSubmit_10_listener","ɵɵadvance","ɵɵproperty","status","ɵɵpureFunction0","_c0"],"sources":["/Users/yohannes/playground/splitExpense/src/app/signin.component.ts"],"sourcesContent":["import {Component, inject} from '@angular/core';\nimport {ToastService} from \"./toast.service\";\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {AuthService} from \"./auth.service\";\nimport {IUser} from \"../../frontend/src/app/user/state.service\";\n\n@Component({\n  selector: 'app-signin',\n  template: `\n   <div>\n     <section class=\"bg-gray-50 dark:bg-gray-900\">\n       <div class=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n         <a href=\"#\" class=\"flex items-center mb-6 text-2xl font-semibold text-gray-900 dark:text-white\">\n           <img class=\" h-8 mr-2\" src=\"../assets/images/logo.png\" alt=\"logo\">\n           CoinSplit\n         </a>\n         <div class=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n           <div class=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n             <h1 class=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n               Sign in to your account\n             </h1>\n             <form class=\"space-y-4 md:space-y-6\"  [formGroup]=\"signinForm\" (ngSubmit)=\"onSignIn()\">\n               <div>\n                 <label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\" >Your email</label>\n                 <input type=\"email\" name=\"email\" id=\"email\" class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-purple-600 focus:border-purple-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-purple-500 dark:focus:border-purple-500\" placeholder=\"name@company.com\" required=\"true\" formControlName=\"email\">\n               </div>\n               <div>\n                 <label for=\"password\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\" >Password</label>\n                 <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\" class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-purple-600 focus:border-purple-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required=\"true\" formControlName=\"password\">\n               </div>\n               <div class=\"flex items-center justify-between\">\n                 <div class=\"flex items-start\">\n                   <div class=\"flex items-center h-5\">\n                     <input id=\"remember\" aria-describedby=\"remember\" type=\"checkbox\" class=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-purple-800 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-purple-600 dark:ring-offset-gray-800\" required=\"\">\n                   </div>\n                   <div class=\"ml-3 text-sm\">\n                     <label for=\"remember\" class=\"text-gray-500 dark:text-gray-300\">Remember me</label>\n                   </div>\n                 </div>\n                 <a href=\"#\" class=\"text-sm font-medium text-primary-600 hover:underline dark:text-primary-500\">Forgot password?</a>\n               </div>\n               <button type=\"submit\" class=\" w-full focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900 disabled:bg-purple-400 disabled:cursor-not-allowed\"  [disabled]=\"signinForm.status==='INVALID'\">Sign in</button>\n\n               <p class=\"text-sm  font-light text-gray-500 dark:text-gray-400\">\n                 Don’t have an account yet? <a [routerLink]=\"['','signup']\" class=\"font-medium text-primary-600 hover:underline dark:text-primary-500\">Sign up</a>\n               </p>\n             </form>\n           </div>\n         </div>\n       </div>\n     </section>\n   </div>\n\n\n\n  `,\n  styles: [\n  ]\n})\nexport class SigninComponent {\n  toast= inject(ToastService);\n  signinForm= inject(FormBuilder).group({\n    email:['',[Validators.email, Validators.required]],\n    password:['',[Validators.min(8),Validators.required]],\n  })\n\n  constructor(private auth: AuthService) {}\n\n\n  onSignIn(){\n    if (this.signinForm.invalid) {\n      return;\n    }\n\n    const { email, password } = this.signinForm.value;\n    if (email && password) {\n      this.auth.signin({email, password}).subscribe(\n        (res) => {\n          if (res && res.success) {\n            try {\n              const token = res.data as string;\n              const user = jwtDecode(token) as IUser;\n              console.log(user);\n              this.stateService.user.set({ ...user, token });\n              this.router.navigate(['', 'group']);\n            } catch (error) {\n              console.error('Error decoding JWT:', error);\n            }\n          }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n\n  }\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}